[tool.poetry]
name = "universal-camera-viewer"
version = "0.9.9"
description = "Visor universal de c√°maras IP multi-marca con arquitectura MVP"
authors = ["Universal Camera Viewer Team"]
readme = "README.md"
packages = [{include = "src-python"}]

[tool.poetry.dependencies]
python = "^3.8"
flet = "^0.24.1"
opencv-python = "^4.10.0.84"
numpy = "^1.24.0"
aiohttp = "^3.11.10"
Pillow = "^11.0.0"
requests = "^2.32.3"
netifaces = "^0.11.0"
onvif-zeep-async = "^3.1.12"
scapy = "^2.6.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
pytest-cov = "^6.0.0"
black = "^24.10.0"
flake8 = "^7.1.1"
mypy = "^1.14.1"
isort = "^5.13.2"
pre-commit = "^4.0.1"
bandit = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directorios
  \.git
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | build
  | dist
  | src_old
)/
'''

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["models", "views", "presenters", "services", "utils", "protocol_handlers"]
src_paths = ["src-python", "tests"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
mypy_path = "src-python"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src-python"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", ".venv", "src_old"]
max-complexity = 10