#!/usr/bin/env python3
"""
Script de prueba para verificar las correcciones de UI:
1. Botones de control en panel de configuraci√≥n
2. Vista de consola en panel de resultados
3. Funcionalidad completa de la vista refactorizada
"""

import tkinter as tk
from tkinter import ttk
import sys
import os

# Agregar el directorio src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from gui.discovery.port_discovery_view_refactored import PortDiscoveryViewRefactored

def main():
    """Funci√≥n principal de prueba."""
    print("üß™ Iniciando prueba de correcciones de UI...")
    
    # Crear ventana principal
    root = tk.Tk()
    root.title("Prueba - Correcciones UI Refactorizada")
    root.geometry("1200x800")
    
    try:
        # Crear vista refactorizada
        print("‚úÖ Creando vista refactorizada...")
        view = PortDiscoveryViewRefactored(root)
        
        print("‚úÖ Vista creada exitosamente")
        print("üîç Verificaciones:")
        print("   - Los botones Escanear, Detener, Limpiar est√°n en Configuraci√≥n")
        print("   - Hay un bot√≥n para alternar Vista Consola/Vista Tabla")
        print("   - El panel de progreso solo muestra barra y estado")
        print("   - El panel de resultados tiene informaci√≥n del escaneo")
        
        # Configurar cierre limpio
        def on_closing():
            print("üßπ Limpiando recursos...")
            view.cleanup()
            root.destroy()
        
        root.protocol("WM_DELETE_WINDOW", on_closing)
        
        print("üöÄ Iniciando interfaz de prueba...")
        print("üí° Prueba las siguientes funciones:")
        print("   1. Cambiar entre modo Simple y Avanzado")
        print("   2. Alternar entre Vista Tabla y Vista Consola")
        print("   3. Usar los botones de control en Configuraci√≥n")
        print("   4. Verificar que no hay botones duplicados")
        
        # Iniciar loop principal
        root.mainloop()
        
    except Exception as e:
        print(f"‚ùå Error durante la prueba: {e}")
        import traceback
        traceback.print_exc()
        return False
    
    print("‚úÖ Prueba completada exitosamente")
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 