# Pre-commit configuration for Universal Camera Viewer
# Install with: pre-commit install
# Run manually: pre-commit run --all-files

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.md|.*\.txt)$
      - id: end-of-file-fixer
        exclude: ^(examples/logs/.*|\.env\.example)$
      - id: check-yaml
        args: ['--unsafe']
      - id: check-toml
      - id: check-json
        exclude: ^(\.vscode/.*\.json)$
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: ['--django']

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3
        args: ['--line-length=88']
        exclude: ^(src_old/|examples/.*\.py)$

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=88']
        exclude: ^(src_old/|examples/.*\.py)$

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503,E501']
        exclude: ^(src_old/|examples/.*\.py|tests/.*\.py)$
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Security linting
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-r', '-f', 'json']
        exclude: ^(tests/|examples/|src_old/)
        additional_dependencies: ['bandit[toml]']

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --install-types, --non-interactive]
        exclude: ^(src_old/|examples/|tests/)
        additional_dependencies:
          - types-requests
          - types-python-dotenv

  # Docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        exclude: ^(src_old/|examples/|tests/)

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown]
        exclude: ^(CHANGELOG\.md|\.github/)

  # Remove unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --remove-duplicate-keys
          - --in-place
        exclude: ^(src_old/|examples/)

  # Upgrade Python syntax
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py39-plus]
        exclude: ^(src_old/|examples/)

  # Sort requirements.txt files
  - repo: https://github.com/adamchainz/requirements-txt-fixer
    rev: 1.6.0
    hooks:
      - id: requirements-txt-fixer
        files: requirements.*\.txt$

  # Check for common misspellings
  - repo: https://github.com/codespell-project/codespell
    rev: v2.2.6
    hooks:
      - id: codespell
        args: ['--write-changes']
        exclude: ^(.*\.log|examples/logs/|\.git/)

# Configuration for specific hooks
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy]  # Skip mypy in CI as it's resource intensive 